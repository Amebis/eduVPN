<?xml version="1.0"?>
<!--
    MSI - Helper script for Microsoft Installer database manipulation

    Copyright: 2017-2022 The Commons Conservancy
    SPDX-License-Identifier: GPL-3.0+
-->
<package>
	<job id="MakeMST">
		<runtime>
			<description>Build MSI language from differences between two MSI files.</description>
			<unnamed name="&lt;source.msi&gt;" helpstring="Original MSI file" required="true"/>
			<unnamed name="&lt;destination.msi&gt;" helpstring="Updated MSI file" required="true"/>
			<unnamed name="&lt;diff.mst&gt;" helpstring="Output MST file" required="true"/>
		</runtime>
		<script language="JScript"><![CDATA[
			if (WScript.Arguments.Unnamed.Length < 3) {
				WScript.Arguments.ShowUsage();
				WScript.Quit(1);
			}

			var
				fso      = WScript.CreateObject("Scripting.FileSystemObject"),
				mst_path = WScript.Arguments.Unnamed(2);

			try {
				var
					installer = WScript.CreateObject("WindowsInstaller.Installer"),
					db_src    = installer.OpenDatabase(WScript.Arguments.Unnamed(0), /*msiOpenDatabaseModeReadOnly*/0),
					db_dst    = installer.OpenDatabase(WScript.Arguments.Unnamed(1), /*msiOpenDatabaseModeReadOnly*/0);

				// Create transform.
				db_dst.GenerateTransform(db_src, mst_path);
				db_dst.CreateTransformSummaryInfo(db_src, mst_path, /*msiTransformErrorNone*/0, /*msiTransformValidationNone*/0);
			} catch (err) {
				// In case of error, delete the output file.
				if (fso.FileExists(mst_path))
					fso.DeleteFile(mst_path);

				throw err;
			}

			WScript.Quit(0);
		]]></script>
	</job>
	<job id="AddStorage">
		<runtime>
			<description>Adds sub-storage to MSI file.</description>
			<unnamed name="&lt;database.msi&gt;" helpstring="MSI database file" required="true"/>
			<unnamed name="&lt;transform.mst&gt;" helpstring="MST file to add as a sub-storage" required="true"/>
			<unnamed name="&lt;name&gt;" helpstring="Sub-storage name" required="true"/>
			<named name="L" helpstring="Add transform to the list of language transforms" type="boolean" required="false"/>
		</runtime>
		<script language="JScript"><![CDATA[
			if (WScript.Arguments.Unnamed.Length < 3) {
				WScript.Arguments.ShowUsage();
				WScript.Quit(1);
			}

			var
				fso      = WScript.CreateObject("Scripting.FileSystemObject"),
				msi_path = WScript.Arguments.Unnamed(0);

			try {
				var
					installer   = WScript.CreateObject("WindowsInstaller.Installer"),
					database    = installer.OpenDatabase(msi_path, /*msiOpenDatabaseModeTransact*/1),
					view        = database.OpenView("SELECT Name,Data FROM _Storages"),
					record      = installer.CreateRecord(2),
					stream_path = WScript.Arguments.Unnamed(1),
					stream_name = WScript.Arguments.Unnamed(2);

				try {
					// Inserts or updates sub-storage.
					record.StringData(1) = stream_name;
					view.Execute(record);
					record.SetStream(2, stream_path);
					view.Modify(/*msiViewModifyAssign*/3, record);
				} catch (err) {
					throw new Error(err.number, "" + stream_path + ": " + err.description);
				}

				if (WScript.Arguments.Named.Exists("L") && WScript.Arguments.Named("L") != false) {
					// Get platform.
					var
						sumInfo   = database.SummaryInformation(1),
						template  = sumInfo.Property(/*PID_TEMPLATE*/7),
						idx_delim = template.indexOf(";"),
						platform  = idx_delim >= 0 ? template.substring(0, idx_delim + 1) : ";",
						languages = idx_delim >= 0 ? template.substring(idx_delim + 1).split(new RegExp("\\s*,\\s*")) : new Array();

					languages.push(stream_name);
					
					// Set template property.
					sumInfo.Property(/*PID_TEMPLATE*/7) = platform + languages.join(",");
					sumInfo.Persist();
				}

				// Commit database
				database.Commit();
			} catch (err) {
				// In case of error, delete the output file.
				if (fso.FileExists(msi_path))
					fso.DeleteFile(msi_path);

				throw err;
			}

			WScript.Quit(0);
		]]></script>
	</job>

<signature>
** SIG ** MIIWbQYJKoZIhvcNAQcCoIIWXjCCFloCAQExCzAJBgUr
** SIG ** DgMCGgUAMGcGCisGAQQBgjcCAQSgWTBXMDIGCisGAQQB
** SIG ** gjcCAR4wJAIBAQQQcAVhGs441BGiowAQS9NQkAIBAAIB
** SIG ** AAIBAAIBAAIBADAhMAkGBSsOAwIaBQAEFLoZTHLiX4ea
** SIG ** pzD1Eqff7v76T3hGoIILaTCCBYEwggRpoAMCAQICEQCC
** SIG ** ZAVjmCBqzdVwckWbjxuSMA0GCSqGSIb3DQEBCwUAMH0x
** SIG ** CzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1h
** SIG ** bmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGjAYBgNV
** SIG ** BAoTEUNPTU9ETyBDQSBMaW1pdGVkMSMwIQYDVQQDExpD
** SIG ** T01PRE8gUlNBIENvZGUgU2lnbmluZyBDQTAeFw0xODEw
** SIG ** MjYwMDAwMDBaFw0yMTEwMjUyMzU5NTlaMIHFMQswCQYD
** SIG ** VQQGEwJTSTENMAsGA1UEEQwEMTI0MTEuMCwGA1UECAwl
** SIG ** b3NyZWRuamVzbG92ZW5za2Egc3RhdGlzdGnEjW5hIHJl
** SIG ** Z2lqYTEPMA0GA1UEBwwGS2FtbmlrMRMwEQYDVQQJDApC
** SIG ** YWtvdm5payAzMSEwHwYDVQQKDBhBbWViaXMsIGQuIG8u
** SIG ** IG8uLCBLYW1uaWsxCzAJBgNVBAsMAklUMSEwHwYDVQQD
** SIG ** DBhBbWViaXMsIGQuIG8uIG8uLCBLYW1uaWswggEiMA0G
** SIG ** CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDqpru5Ba/n
** SIG ** gBDGlQDDQ5UiT8vh1R/iiHFxFl9OYOLNJ/Vpb/DDGuPv
** SIG ** fd89dNeTwUIa4PxHxBUg4q7EbcQJz0sLrWj6Q0qEjV46
** SIG ** mtxWe1p0EzKAH1gmDARjA0llstZB20ZWcRCNHBQR2Mw/
** SIG ** LqxVrNLZCWD/ef/PiLuk9JNRP5Jk48c0qA3Y5qGIN5gc
** SIG ** l4AN1iHR0gOWTMZdhzxhxMH+n4D9F4yTbSb6Yowvrksw
** SIG ** 2y7FI8jzEOZerFZXv8EhtnPz3rNAnkhCpDhIlazbcJap
** SIG ** K8xRWEC/jxbCZmBoxLefXgBPh3WeYsXCXPCJOf92w1Y0
** SIG ** bGsAnaJV2BCb1+oynH9RaKJRAgMBAAGjggGxMIIBrTAf
** SIG ** BgNVHSMEGDAWgBQpkWD/ik366/mmarjP+eZLvUnOEjAd
** SIG ** BgNVHQ4EFgQUM/ogId0LmoJMJJqeUhEqN2AHEVUwDgYD
** SIG ** VR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwEwYDVR0l
** SIG ** BAwwCgYIKwYBBQUHAwMwEQYJYIZIAYb4QgEBBAQDAgQQ
** SIG ** MEYGA1UdIAQ/MD0wOwYMKwYBBAGyMQECAQMCMCswKQYI
** SIG ** KwYBBQUHAgEWHWh0dHBzOi8vc2VjdXJlLmNvbW9kby5u
** SIG ** ZXQvQ1BTMEMGA1UdHwQ8MDowOKA2oDSGMmh0dHA6Ly9j
** SIG ** cmwuY29tb2RvY2EuY29tL0NPTU9ET1JTQUNvZGVTaWdu
** SIG ** aW5nQ0EuY3JsMHQGCCsGAQUFBwEBBGgwZjA+BggrBgEF
** SIG ** BQcwAoYyaHR0cDovL2NydC5jb21vZG9jYS5jb20vQ09N
** SIG ** T0RPUlNBQ29kZVNpZ25pbmdDQS5jcnQwJAYIKwYBBQUH
** SIG ** MAGGGGh0dHA6Ly9vY3NwLmNvbW9kb2NhLmNvbTAiBgNV
** SIG ** HREEGzAZgRdwZXRlci5ob2xvemFuQGFtZWJpcy5zaTAN
** SIG ** BgkqhkiG9w0BAQsFAAOCAQEAXOMzjEisjR82x74+PaWo
** SIG ** Z653s00m3rBAyndA8ZdCqSjFEQM5BVPJ26lecw/Mv8wb
** SIG ** jADWAPWh0C0Og6k7q+drMOA3xOZSgBV2QWOXlaeJS01X
** SIG ** 5Rj45i2+ADU+ua7FMKn7Au60ibcCJx7UbpXm17VQZaNT
** SIG ** 5Tw0KxeuDo/cBlKudOV8J1V616A6zDw/ox/M197BASfp
** SIG ** hEH7u6gXGcPS0Cy1WtSm3BNRjhLhcUF3eoH6drMp4BAa
** SIG ** Vi7vqmo3kYJoQHCer5cHQHgiTTdgvcNT3RI4zMiMP/kE
** SIG ** Sr+o6aX20aeR/OpfvVwq+tnKgMHYT8trdCMe6zUU8CYl
** SIG ** Bt0Vfl35gpYxdTCCBeAwggPIoAMCAQICEC58h8wOk0pS
** SIG ** /pT9HLfNNK8wDQYJKoZIhvcNAQEMBQAwgYUxCzAJBgNV
** SIG ** BAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0
** SIG ** ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNP
** SIG ** TU9ETyBDQSBMaW1pdGVkMSswKQYDVQQDEyJDT01PRE8g
** SIG ** UlNBIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTEz
** SIG ** MDUwOTAwMDAwMFoXDTI4MDUwODIzNTk1OVowfTELMAkG
** SIG ** A1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hl
** SIG ** c3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMR
** SIG ** Q09NT0RPIENBIExpbWl0ZWQxIzAhBgNVBAMTGkNPTU9E
** SIG ** TyBSU0EgQ29kZSBTaWduaW5nIENBMIIBIjANBgkqhkiG
** SIG ** 9w0BAQEFAAOCAQ8AMIIBCgKCAQEAppiQY3eRNH+K0d3p
** SIG ** ZzER68we/TEds7liVz+TvFvjnx4kMhEna7xRkafPnp4l
** SIG ** s1+BqBgPHR4gMA77YXuGCbPj/aJonRwsnb9y4+R1oOU1
** SIG ** I47Jiu4aDGTH2EKhe7VSA0s6sI4jS0tj4CKUN3vVeZAK
** SIG ** FBhRLOb+wRLwHD9hYQqMotz2wzCqzSgYdUjBeVoIzbuM
** SIG ** VYz31HaQOjNGUHOYXPSFSmsPgN1e1r39qS/AJfX5eNeN
** SIG ** XxDCRFU8kDwxRstwrgepCuOvwQFvkBoj4l8428YIXUez
** SIG ** g0HwLgA3FLkSqnmSUs2HD3vYYimkfjC9G7WMcrRI8uPo
** SIG ** IfleTGJ5iwIGn3/VCwIDAQABo4IBUTCCAU0wHwYDVR0j
** SIG ** BBgwFoAUu69+Aj36pvE8hI6t7jiY7NkyMtQwHQYDVR0O
** SIG ** BBYEFCmRYP+KTfrr+aZquM/55ku9Sc4SMA4GA1UdDwEB
** SIG ** /wQEAwIBhjASBgNVHRMBAf8ECDAGAQH/AgEAMBMGA1Ud
** SIG ** JQQMMAoGCCsGAQUFBwMDMBEGA1UdIAQKMAgwBgYEVR0g
** SIG ** ADBMBgNVHR8ERTBDMEGgP6A9hjtodHRwOi8vY3JsLmNv
** SIG ** bW9kb2NhLmNvbS9DT01PRE9SU0FDZXJ0aWZpY2F0aW9u
** SIG ** QXV0aG9yaXR5LmNybDBxBggrBgEFBQcBAQRlMGMwOwYI
** SIG ** KwYBBQUHMAKGL2h0dHA6Ly9jcnQuY29tb2RvY2EuY29t
** SIG ** L0NPTU9ET1JTQUFkZFRydXN0Q0EuY3J0MCQGCCsGAQUF
** SIG ** BzABhhhodHRwOi8vb2NzcC5jb21vZG9jYS5jb20wDQYJ
** SIG ** KoZIhvcNAQEMBQADggIBAAI/AjnD7vjKO4neDG1NsfFO
** SIG ** kk+vwjgsBMzFYxGrCWOvq6LXAj/MbxnDPdYaCJT/Jdip
** SIG ** iKcrEBrgm7EHIhpRHDrU4ekJv+YkdK8eexYxbiPvVFEt
** SIG ** UgLidQgFTPG3UeFRAMaH9mzuEER2V2rx31hrIapJ1Hw3
** SIG ** Tr3/tnVUQBg2V2cRzU8C5P7z2vx1F9vst/dlCSNJH0NX
** SIG ** g+p+IHdhyE3yu2VNqPeFRQevemknZZApQIvfezpROYyo
** SIG ** H3B5rW1CIKLPDGwDjEzNcweU51qOOgS6oqF8H8tjOhWn
** SIG ** 1BUbp1JHMqn0v2RH0aofU04yMHPCb7d4gp1c/0a7ayId
** SIG ** iAv4G6o0pvyM9d1/ZYyMMVcx0DbsR6HPy4uo7xwYWMUG
** SIG ** d8pLm1GvTAhKeo/io1Lijo7MJuSy2OU4wqjtxoGcNWup
** SIG ** WGFKCpe0S0K2VZ2+medwbVn4bSoMfxlgXwyaiGwwrFIJ
** SIG ** kBYb/yud29AgyonqKH4yjhnfe0gzHtdl+K7J+IMUk3Z9
** SIG ** ZNCOzr41ff9yMU2fnr0ebC+ojwwGUPuMJ7N2yfTm18M0
** SIG ** 4oyHIYZh/r9VdOEhdwMKaGy75Mmp5s9ZJet87EUOeWZo
** SIG ** 6CLNuO+YhU2WETwJitB/vCgoE/tqylSNklzNwmWYBp7O
** SIG ** SFvUtTeTRkF8B93P+kPvumdh/31J4LswfVyA4+YWOUun
** SIG ** MYIKcDCCCmwCAQEwgZIwfTELMAkGA1UEBhMCR0IxGzAZ
** SIG ** BgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE
** SIG ** BxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExp
** SIG ** bWl0ZWQxIzAhBgNVBAMTGkNPTU9ETyBSU0EgQ29kZSBT
** SIG ** aWduaW5nIENBAhEAgmQFY5ggas3VcHJFm48bkjAJBgUr
** SIG ** DgMCGgUAoHAwEAYKKwYBBAGCNwIBDDECMAAwGQYJKoZI
** SIG ** hvcNAQkDMQwGCisGAQQBgjcCAQQwHAYKKwYBBAGCNwIB
** SIG ** CzEOMAwGCisGAQQBgjcCARUwIwYJKoZIhvcNAQkEMRYE
** SIG ** FDi86uRHaiMqXN6EuttjQZgo10VbMA0GCSqGSIb3DQEB
** SIG ** AQUABIIBAFicJlCZhRK+ljG0x5TXFdD1x62BnlxdhUd9
** SIG ** B+rN1tGEvmKKI0tJF2oTVYIysJacS07jvYU7oM2OyBI4
** SIG ** wZ2rfaC+0gYO3/elWZgCNLninFIVJLXyOZHH32YxmkX8
** SIG ** tfbnB3MuM4gRKinNQ7J8SH/AZA4+4SsAfY+q+k8kjzoh
** SIG ** PS5vC/su5KVMGKnsSDkt3ZBlaRVMslw0gm1hEd243EPD
** SIG ** H9YTlRbMl0bwUS9ZefuvVDcTMcxt67HCr6KjWHLcCehT
** SIG ** y50WaKyZhnvfPGzbgrGx35AfG88NAs6JMa4MUNMVShsp
** SIG ** elv+35EgvASwpnYDHqu86s7vXfyDyq2lOWiqIDYReCmh
** SIG ** gghAMIIIPAYKKwYBBAGCNwMDATGCCCwwgggoBgkqhkiG
** SIG ** 9w0BBwKggggZMIIIFQIBAzELMAkGBSsOAwIaBQAwgf0G
** SIG ** CyqGSIb3DQEJEAEEoIHtBIHqMIHnAgEBBgorBgEEAbIx
** SIG ** AgEBMCEwCQYFKw4DAhoFAAQUMn+R9yCaV5RXRyORGOFZ
** SIG ** Ez2cbHwCFQCpDu4jYjt7sgLdfki6lSAgU9M2SBgPMjAx
** SIG ** ODExMTUwOTEwMzhaoIGKpIGHMIGEMQswCQYDVQQGEwJH
** SIG ** QjEbMBkGA1UECBMSR3JlYXRlciBNYW5jaGVzdGVyMRAw
** SIG ** DgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01PRE8g
** SIG ** Q0EgTGltaXRlZDEqMCgGA1UEAxMhQ09NT0RPIFNIQS0x
** SIG ** IFRpbWUgU3RhbXBpbmcgU2lnbmVyoIIEnTCCBJkwggOB
** SIG ** oAMCAQICDxaI8DklXmOOaRQ5B+YzCzANBgkqhkiG9w0B
** SIG ** AQUFADCBlTELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVU
** SIG ** MRcwFQYDVQQHEw5TYWx0IExha2UgQ2l0eTEeMBwGA1UE
** SIG ** ChMVVGhlIFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQL
** SIG ** ExhodHRwOi8vd3d3LnVzZXJ0cnVzdC5jb20xHTAbBgNV
** SIG ** BAMTFFVUTi1VU0VSRmlyc3QtT2JqZWN0MB4XDTE1MTIz
** SIG ** MTAwMDAwMFoXDTE5MDcwOTE4NDAzNlowgYQxCzAJBgNV
** SIG ** BAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0
** SIG ** ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNP
** SIG ** TU9ETyBDQSBMaW1pdGVkMSowKAYDVQQDEyFDT01PRE8g
** SIG ** U0hBLTEgVGltZSBTdGFtcGluZyBTaWduZXIwggEiMA0G
** SIG ** CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDp6T3f1zcI
** SIG ** yR44slJTQm0i8bHEBgRrnv2CdFBDfcagux9O+QJxJrHv
** SIG ** Q9iDjEj85w+XeprrnN6mow47HEQYdY54pRdp/kkYpOK7
** SIG ** XE7+jipUelDw1fbMkeeZedfeeZTXljP+DoO+Ir9jFiyj
** SIG ** 3Sgbrz2r6pfS8b8EEOc9SEX9H2hlwX9ZmWnAIjEMYm6n
** SIG ** XGUBIbBjxCIYJ+7m/NIAPUcuqLiGVl0E3BMXJW4c30QP
** SIG ** Fc2326VXdkJvAGiCmdLjwd7wi5RXTOwIkCIhziIrmAxC
** SIG ** 5kKTlJiT7/0G2T+8W5tUPCCx7mrWR3rFq4DpMJre8aQ/
** SIG ** VU0KCTSKdSnSaa2XD1C/+MoJAgMBAAGjgfQwgfEwHwYD
** SIG ** VR0jBBgwFoAU2u1kdBScFDyr3ZmpvVsoTYs8ydgwHQYD
** SIG ** VR0OBBYEFI5rLTNr9DOnk7MTmqXgCvcSNWqIMA4GA1Ud
** SIG ** DwEB/wQEAwIGwDAMBgNVHRMBAf8EAjAAMBYGA1UdJQEB
** SIG ** /wQMMAoGCCsGAQUFBwMIMEIGA1UdHwQ7MDkwN6A1oDOG
** SIG ** MWh0dHA6Ly9jcmwudXNlcnRydXN0LmNvbS9VVE4tVVNF
** SIG ** UkZpcnN0LU9iamVjdC5jcmwwNQYIKwYBBQUHAQEEKTAn
** SIG ** MCUGCCsGAQUFBzABhhlodHRwOi8vb2NzcC51c2VydHJ1
** SIG ** c3QuY29tMA0GCSqGSIb3DQEBBQUAA4IBAQC6MyRAQIx8
** SIG ** 21ifs2CYsvXAMf7rH25Q9grg5OaBrSaHot/9s9r0c/MA
** SIG ** +ykbiRsVPttrUpMrxKw5gdc8Z1eaOTbgKAia4zlPm4kJ
** SIG ** f3vFYX9ZiTIlCmquGj7woieotsO4h/cWBEhBPVzY7J9N
** SIG ** IDEE2WWh7c1pB1MWPd02AgqI60DlBjALuBZL3O+8VQn/
** SIG ** xj4SLnaz3M5C7/l2V+G3CgVAmFiaXXEWk3GMZYHqb/OJ
** SIG ** 9/tzrbTnv9mOb6oLTyXzuOHV3XWYaIH4qsDRgMLExDmJ
** SIG ** wfbJnmzXdPnZl/hPwpoKzV6P+Bnp4KWfxPCSIeYteSXJ
** SIG ** IvnD8DqEV606FvRjlBAdXdDGMYICYDCCAlwCAQEwgakw
** SIG ** gZUxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJVVDEXMBUG
** SIG ** A1UEBxMOU2FsdCBMYWtlIENpdHkxHjAcBgNVBAoTFVRo
** SIG ** ZSBVU0VSVFJVU1QgTmV0d29yazEhMB8GA1UECxMYaHR0
** SIG ** cDovL3d3dy51c2VydHJ1c3QuY29tMR0wGwYDVQQDExRV
** SIG ** VE4tVVNFUkZpcnN0LU9iamVjdAIPFojwOSVeY45pFDkH
** SIG ** 5jMLMAkGBSsOAwIaBQCggYwwGgYJKoZIhvcNAQkDMQ0G
** SIG ** CyqGSIb3DQEJEAEEMBwGCSqGSIb3DQEJBTEPFw0xODEx
** SIG ** MTUwOTEwMzhaMCMGCSqGSIb3DQEJBDEWBBS9a+S5Et19
** SIG ** BwLsmlZ5p91uxKl+fzArBgsqhkiG9w0BCRACDDEcMBow
** SIG ** GDAWBBQDpbFGY+sSAjCRuEptami8hx3mazANBgkqhkiG
** SIG ** 9w0BAQEFAASCAQDOMY4o77wPp+mhrlQOae3h9/GHVBVN
** SIG ** BePcIQRU3rnAsG0s552XJEDz5usQXCTkiQ8L0h903Dnj
** SIG ** iQ8Od2k5ZcMEctKNobk+4GH5F+xb49eyyMlcPmZDiEj4
** SIG ** HRWkZrHt9WkdG3RHl3RNJISdYKjcZS43znTifzAfvLSS
** SIG ** XYRh2D1y1W+IQ6QtGBhdk6gNi3WEvZyCr4V4pJZNoxNg
** SIG ** KlNHKEf2GsE7wpCtMPX3AoXDc8NyQSz2Z28CKCuHbpp2
** SIG ** NJ5EwpxeG1gBIgRPXYKRYFvwKNPSO/vvJcPVRxsGiOO8
** SIG ** /exg68nWQRCf6cXC+WMy1WiyWUn+mbQ7TAE0mp2tEbLO
** SIG ** GV9U
</signature>
</package>
