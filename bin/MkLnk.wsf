<?xml version="1.0"?>
<!--
    MkLnk - Helper script for generating Start Menu shortcuts

    Copyright: 2017-2023 The Commons Conservancy
    SPDX-License-Identifier: GPL-3.0+
-->
<package>
	<job id="MkLnk">
		<runtime>
			<description>Creates shortcut to a program - Amebis, Copyright © 2015-2017</description>
			<unnamed name="&lt;Shortcut.lnk&gt;" required="true"  helpstring="Shortcut file to create"/>
			<unnamed name="&lt;Target&gt;"       required="true"  helpstring="Target file the shortcut invokes"/>
			<named   name="A"  type="string"     required="false" helpstring="Command line arguments"/>
			<named   name="F"  type="string"     required="false" helpstring="Start in folder"/>
			<named   name="S"  type="string"     required="false" helpstring="Shortcut key (Example: &quot;ALT+CTRL+F&quot;)"/>
			<named   name="R"  type="string"     required="false" helpstring="Run (Valid values: 1=Normal Window, 3=Maximized, 7=Minimized)"/>
			<named   name="LN" type="string"     required="false" helpstring="Localized name (Example: &quot;@resource.dll,-3&quot;"/>
			<named   name="C"  type="string"     required="false" helpstring="Comment"/>
			<named   name="I"  type="string"     required="false" helpstring="Icon (Example: &quot;SHELL32.DLL,1&quot;)"/>
			<example>
Example:
MkLnk.wsf &quot;%USERPROFILE%\Desktop\My shortcut.lnk&quot; &quot;%windir%\notepad.exe&quot; /R:3 /C:&quot;Starts the Notepad Maximized&quot;
</example>
		</runtime>
		<reference object="WScript.Shell"/>
		<reference object="Scripting.FileSystemObject"/>
		<script language="JScript"><![CDATA[
			if (WScript.Arguments.Unnamed.Length < 2) {
				WScript.Arguments.ShowUsage();
				WScript.Quit(1);
			}

			if (!String.prototype.trim) {
				var String_trim_re = new RegExp("^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$", "g");
				String.prototype.trim = function () {
					return this.replace(String_trim_re, '');
				};
			}

			var
				wsh = WScript.CreateObject("WScript.Shell");

			try {
				var link = wsh.CreateShortcut(WScript.Arguments.Unnamed(0));
	
				// Set shortcut's target.
				link.TargetPath = WScript.Arguments.Unnamed(1);

				if (WScript.Arguments.Named.Exists("A"))
					link.Arguments = WScript.Arguments.Named("A");

				if (WScript.Arguments.Named.Exists("F"))
					link.WorkingDirectory = WScript.Arguments.Named("F");

				if (WScript.Arguments.Named.Exists("S"))
					link.HotKey = WScript.Arguments.Named("S");

				if (WScript.Arguments.Named.Exists("R"))
					link.WindowStyle = parseInt(WScript.Arguments.Named("R"), 10);

				if (WScript.Arguments.Named.Exists("C"))
					link.Description = WScript.Arguments.Named("C");

				if (WScript.Arguments.Named.Exists("I"))
					link.IconLocation = WScript.Arguments.Named("I");

				link.Save();
			} catch (err) {
				// Clean-up!
				try {
					// Delete LNK file.
					var fso = WScript.CreateObject("Scripting.FileSystemObject");
					fso.DeleteFile(WScript.Arguments.Unnamed(0), true);
				} catch (err2) {}

				throw err;
			}

			if (WScript.Arguments.Named.Exists("LN")) {
				// Localizing shortcut name is localizing filename using desktop.ini.
				var fso = WScript.CreateObject("Scripting.FileSystemObject");
				var
					desktop_ini_filename = fso.GetParentFolderName(WScript.Arguments.Unnamed(0)) + "\\desktop.ini",
					desktop_ini = "",
					desktop_ini_section = "",
					LocalizedFileNames_present = false;
				
				// Read desktop.ini file
				var f = fso.OpenTextFile(desktop_ini_filename, ForReading, false, TristateTrue);
				try {
					var
						re_comment = new RegExp("^\\s*;(.*)$", "i"),
						re_section = new RegExp("^\\s*\\[([^\\]]*)\\]\\s*$", "i"),
						re_value   = new RegExp("^([^=]*)=(.*)$");
					var
						shortcut_filename = fso.GetFileName(WScript.Arguments.Unnamed(0)),
						shortcut_filename_lc = shortcut_filename.toLowerCase();
						
					while (!f.AtEndOfStream) {
						var line = f.ReadLine(), m;
						if (line.match(re_comment)) {
							// ; comment found.
							desktop_ini += line + "\r\n";
							continue;
						}

						if (m = line.match(re_section)) {
							// [section] found.
							desktop_ini_section = m[1].trim().toLowerCase();
							desktop_ini += line + "\r\n";
							if (desktop_ini_section == "localizedfilenames") {
								// Add our shortcut.
								LocalizedFileNames_present = true;
								desktop_ini += fso.GetFileName(WScript.Arguments.Unnamed(0)) + "=" + WScript.Arguments.Named("LN") + "\r\n";
							}
						} else if (m = line.match(re_value)) {
							// name=value pair found.
							if (desktop_ini_section == "localizedfilenames" && m[1].trim().toLowerCase() == shortcut_filename_lc) {
								// Our shortcut was found from before. Skip it.
							} else
								desktop_ini += line + "\r\n";
						} else {
							// Copy everything else.
							desktop_ini += line + "\r\n";
						}
					}
				} finally {
					f.Close();
				}

				if (!LocalizedFileNames_present)
					desktop_ini +=
						"[LocalizedFileNames]\r\n" +
						fso.GetFileName(WScript.Arguments.Unnamed(0)) + "=" + WScript.Arguments.Named("LN") + "\r\n";

				// desktop.ini files usually have hidden and/or system attributes. Reset them, or overwriting file will fail.
				try {
					var file = fso.GetFile(desktop_ini_filename);
					file.Attributes = Normal;
				} catch (err) {}

				// Write desktop.ini.
				var f = fso.OpenTextFile(desktop_ini_filename, ForWriting, true, TristateTrue);
				try {
					f.Write(desktop_ini);
				} finally {
					f.Close();
				}

				// Set hidden and system attributes.
				try {
					var file = fso.GetFile(desktop_ini_filename);
					file.Attributes |= Hidden | System;
				} catch (err) {}
			}

			WScript.Quit(0);
		]]></script>
	</job>

<signature>
** SIG ** MIIWbAYJKoZIhvcNAQcCoIIWXTCCFlkCAQExCzAJBgUr
** SIG ** DgMCGgUAMGcGCisGAQQBgjcCAQSgWTBXMDIGCisGAQQB
** SIG ** gjcCAR4wJAIBAQQQcAVhGs441BGiowAQS9NQkAIBAAIB
** SIG ** AAIBAAIBAAIBADAhMAkGBSsOAwIaBQAEFJtnNvXdWGTq
** SIG ** bnsUk/gfK3+DTCD5oIILaTCCBYEwggRpoAMCAQICEQCC
** SIG ** ZAVjmCBqzdVwckWbjxuSMA0GCSqGSIb3DQEBCwUAMH0x
** SIG ** CzAJBgNVBAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1h
** SIG ** bmNoZXN0ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGjAYBgNV
** SIG ** BAoTEUNPTU9ETyBDQSBMaW1pdGVkMSMwIQYDVQQDExpD
** SIG ** T01PRE8gUlNBIENvZGUgU2lnbmluZyBDQTAeFw0xODEw
** SIG ** MjYwMDAwMDBaFw0yMTEwMjUyMzU5NTlaMIHFMQswCQYD
** SIG ** VQQGEwJTSTENMAsGA1UEEQwEMTI0MTEuMCwGA1UECAwl
** SIG ** b3NyZWRuamVzbG92ZW5za2Egc3RhdGlzdGnEjW5hIHJl
** SIG ** Z2lqYTEPMA0GA1UEBwwGS2FtbmlrMRMwEQYDVQQJDApC
** SIG ** YWtvdm5payAzMSEwHwYDVQQKDBhBbWViaXMsIGQuIG8u
** SIG ** IG8uLCBLYW1uaWsxCzAJBgNVBAsMAklUMSEwHwYDVQQD
** SIG ** DBhBbWViaXMsIGQuIG8uIG8uLCBLYW1uaWswggEiMA0G
** SIG ** CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDqpru5Ba/n
** SIG ** gBDGlQDDQ5UiT8vh1R/iiHFxFl9OYOLNJ/Vpb/DDGuPv
** SIG ** fd89dNeTwUIa4PxHxBUg4q7EbcQJz0sLrWj6Q0qEjV46
** SIG ** mtxWe1p0EzKAH1gmDARjA0llstZB20ZWcRCNHBQR2Mw/
** SIG ** LqxVrNLZCWD/ef/PiLuk9JNRP5Jk48c0qA3Y5qGIN5gc
** SIG ** l4AN1iHR0gOWTMZdhzxhxMH+n4D9F4yTbSb6Yowvrksw
** SIG ** 2y7FI8jzEOZerFZXv8EhtnPz3rNAnkhCpDhIlazbcJap
** SIG ** K8xRWEC/jxbCZmBoxLefXgBPh3WeYsXCXPCJOf92w1Y0
** SIG ** bGsAnaJV2BCb1+oynH9RaKJRAgMBAAGjggGxMIIBrTAf
** SIG ** BgNVHSMEGDAWgBQpkWD/ik366/mmarjP+eZLvUnOEjAd
** SIG ** BgNVHQ4EFgQUM/ogId0LmoJMJJqeUhEqN2AHEVUwDgYD
** SIG ** VR0PAQH/BAQDAgeAMAwGA1UdEwEB/wQCMAAwEwYDVR0l
** SIG ** BAwwCgYIKwYBBQUHAwMwEQYJYIZIAYb4QgEBBAQDAgQQ
** SIG ** MEYGA1UdIAQ/MD0wOwYMKwYBBAGyMQECAQMCMCswKQYI
** SIG ** KwYBBQUHAgEWHWh0dHBzOi8vc2VjdXJlLmNvbW9kby5u
** SIG ** ZXQvQ1BTMEMGA1UdHwQ8MDowOKA2oDSGMmh0dHA6Ly9j
** SIG ** cmwuY29tb2RvY2EuY29tL0NPTU9ET1JTQUNvZGVTaWdu
** SIG ** aW5nQ0EuY3JsMHQGCCsGAQUFBwEBBGgwZjA+BggrBgEF
** SIG ** BQcwAoYyaHR0cDovL2NydC5jb21vZG9jYS5jb20vQ09N
** SIG ** T0RPUlNBQ29kZVNpZ25pbmdDQS5jcnQwJAYIKwYBBQUH
** SIG ** MAGGGGh0dHA6Ly9vY3NwLmNvbW9kb2NhLmNvbTAiBgNV
** SIG ** HREEGzAZgRdwZXRlci5ob2xvemFuQGFtZWJpcy5zaTAN
** SIG ** BgkqhkiG9w0BAQsFAAOCAQEAXOMzjEisjR82x74+PaWo
** SIG ** Z653s00m3rBAyndA8ZdCqSjFEQM5BVPJ26lecw/Mv8wb
** SIG ** jADWAPWh0C0Og6k7q+drMOA3xOZSgBV2QWOXlaeJS01X
** SIG ** 5Rj45i2+ADU+ua7FMKn7Au60ibcCJx7UbpXm17VQZaNT
** SIG ** 5Tw0KxeuDo/cBlKudOV8J1V616A6zDw/ox/M197BASfp
** SIG ** hEH7u6gXGcPS0Cy1WtSm3BNRjhLhcUF3eoH6drMp4BAa
** SIG ** Vi7vqmo3kYJoQHCer5cHQHgiTTdgvcNT3RI4zMiMP/kE
** SIG ** Sr+o6aX20aeR/OpfvVwq+tnKgMHYT8trdCMe6zUU8CYl
** SIG ** Bt0Vfl35gpYxdTCCBeAwggPIoAMCAQICEC58h8wOk0pS
** SIG ** /pT9HLfNNK8wDQYJKoZIhvcNAQEMBQAwgYUxCzAJBgNV
** SIG ** BAYTAkdCMRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0
** SIG ** ZXIxEDAOBgNVBAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNP
** SIG ** TU9ETyBDQSBMaW1pdGVkMSswKQYDVQQDEyJDT01PRE8g
** SIG ** UlNBIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTEz
** SIG ** MDUwOTAwMDAwMFoXDTI4MDUwODIzNTk1OVowfTELMAkG
** SIG ** A1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hl
** SIG ** c3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMR
** SIG ** Q09NT0RPIENBIExpbWl0ZWQxIzAhBgNVBAMTGkNPTU9E
** SIG ** TyBSU0EgQ29kZSBTaWduaW5nIENBMIIBIjANBgkqhkiG
** SIG ** 9w0BAQEFAAOCAQ8AMIIBCgKCAQEAppiQY3eRNH+K0d3p
** SIG ** ZzER68we/TEds7liVz+TvFvjnx4kMhEna7xRkafPnp4l
** SIG ** s1+BqBgPHR4gMA77YXuGCbPj/aJonRwsnb9y4+R1oOU1
** SIG ** I47Jiu4aDGTH2EKhe7VSA0s6sI4jS0tj4CKUN3vVeZAK
** SIG ** FBhRLOb+wRLwHD9hYQqMotz2wzCqzSgYdUjBeVoIzbuM
** SIG ** VYz31HaQOjNGUHOYXPSFSmsPgN1e1r39qS/AJfX5eNeN
** SIG ** XxDCRFU8kDwxRstwrgepCuOvwQFvkBoj4l8428YIXUez
** SIG ** g0HwLgA3FLkSqnmSUs2HD3vYYimkfjC9G7WMcrRI8uPo
** SIG ** IfleTGJ5iwIGn3/VCwIDAQABo4IBUTCCAU0wHwYDVR0j
** SIG ** BBgwFoAUu69+Aj36pvE8hI6t7jiY7NkyMtQwHQYDVR0O
** SIG ** BBYEFCmRYP+KTfrr+aZquM/55ku9Sc4SMA4GA1UdDwEB
** SIG ** /wQEAwIBhjASBgNVHRMBAf8ECDAGAQH/AgEAMBMGA1Ud
** SIG ** JQQMMAoGCCsGAQUFBwMDMBEGA1UdIAQKMAgwBgYEVR0g
** SIG ** ADBMBgNVHR8ERTBDMEGgP6A9hjtodHRwOi8vY3JsLmNv
** SIG ** bW9kb2NhLmNvbS9DT01PRE9SU0FDZXJ0aWZpY2F0aW9u
** SIG ** QXV0aG9yaXR5LmNybDBxBggrBgEFBQcBAQRlMGMwOwYI
** SIG ** KwYBBQUHMAKGL2h0dHA6Ly9jcnQuY29tb2RvY2EuY29t
** SIG ** L0NPTU9ET1JTQUFkZFRydXN0Q0EuY3J0MCQGCCsGAQUF
** SIG ** BzABhhhodHRwOi8vb2NzcC5jb21vZG9jYS5jb20wDQYJ
** SIG ** KoZIhvcNAQEMBQADggIBAAI/AjnD7vjKO4neDG1NsfFO
** SIG ** kk+vwjgsBMzFYxGrCWOvq6LXAj/MbxnDPdYaCJT/Jdip
** SIG ** iKcrEBrgm7EHIhpRHDrU4ekJv+YkdK8eexYxbiPvVFEt
** SIG ** UgLidQgFTPG3UeFRAMaH9mzuEER2V2rx31hrIapJ1Hw3
** SIG ** Tr3/tnVUQBg2V2cRzU8C5P7z2vx1F9vst/dlCSNJH0NX
** SIG ** g+p+IHdhyE3yu2VNqPeFRQevemknZZApQIvfezpROYyo
** SIG ** H3B5rW1CIKLPDGwDjEzNcweU51qOOgS6oqF8H8tjOhWn
** SIG ** 1BUbp1JHMqn0v2RH0aofU04yMHPCb7d4gp1c/0a7ayId
** SIG ** iAv4G6o0pvyM9d1/ZYyMMVcx0DbsR6HPy4uo7xwYWMUG
** SIG ** d8pLm1GvTAhKeo/io1Lijo7MJuSy2OU4wqjtxoGcNWup
** SIG ** WGFKCpe0S0K2VZ2+medwbVn4bSoMfxlgXwyaiGwwrFIJ
** SIG ** kBYb/yud29AgyonqKH4yjhnfe0gzHtdl+K7J+IMUk3Z9
** SIG ** ZNCOzr41ff9yMU2fnr0ebC+ojwwGUPuMJ7N2yfTm18M0
** SIG ** 4oyHIYZh/r9VdOEhdwMKaGy75Mmp5s9ZJet87EUOeWZo
** SIG ** 6CLNuO+YhU2WETwJitB/vCgoE/tqylSNklzNwmWYBp7O
** SIG ** SFvUtTeTRkF8B93P+kPvumdh/31J4LswfVyA4+YWOUun
** SIG ** MYIKbzCCCmsCAQEwgZIwfTELMAkGA1UEBhMCR0IxGzAZ
** SIG ** BgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE
** SIG ** BxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExp
** SIG ** bWl0ZWQxIzAhBgNVBAMTGkNPTU9ETyBSU0EgQ29kZSBT
** SIG ** aWduaW5nIENBAhEAgmQFY5ggas3VcHJFm48bkjAJBgUr
** SIG ** DgMCGgUAoHAwEAYKKwYBBAGCNwIBDDECMAAwGQYJKoZI
** SIG ** hvcNAQkDMQwGCisGAQQBgjcCAQQwHAYKKwYBBAGCNwIB
** SIG ** CzEOMAwGCisGAQQBgjcCARUwIwYJKoZIhvcNAQkEMRYE
** SIG ** FHAiI/CBzW4ISM4Iif+dGjwkO0P/MA0GCSqGSIb3DQEB
** SIG ** AQUABIIBADUKzjCxnKADlvwntze8Z3VhXJP9ZpveveSs
** SIG ** wdm2w0/A+V6cHp8VPebiP5w4Ij8ZzeZw6kHkl7pVIyp8
** SIG ** Ijj7ZDCgs+WelLwtiamxf2B2eeDC7jxAonWRfyp3Mfcj
** SIG ** TQqT/yDCc7SQ03lNUoL4e7esh4nlSC5HWdbo43/gtvci
** SIG ** tjIjWUxEYkhRBKwUgHMDkjcLAdVSRNoZIAZ+w+VzMVPu
** SIG ** +tIENm9M6sxgDQMtumXONqUcB/xqNTONwoqKFWrkjo6C
** SIG ** gwXV78Phaal5xBcNmsqfkXK1V0my3taYmEz+5usgu2nE
** SIG ** fb9rLM+433RYbpGcwOAup+MFh2gAR5i1cgkBh2RAc+mh
** SIG ** ggg/MIIIOwYKKwYBBAGCNwMDATGCCCswgggnBgkqhkiG
** SIG ** 9w0BBwKggggYMIIIFAIBAzELMAkGBSsOAwIaBQAwgfwG
** SIG ** CyqGSIb3DQEJEAEEoIHsBIHpMIHmAgEBBgorBgEEAbIx
** SIG ** AgEBMCEwCQYFKw4DAhoFAAQUiCfhTnkb3Fc+7VpcLRWE
** SIG ** tgYkJC0CFE+G4DCQb5SE3qAn8nq/WBD8NlXgGA8yMDE4
** SIG ** MTExNTA5MTAzNVqggYqkgYcwgYQxCzAJBgNVBAYTAkdC
** SIG ** MRswGQYDVQQIExJHcmVhdGVyIE1hbmNoZXN0ZXIxEDAO
** SIG ** BgNVBAcTB1NhbGZvcmQxGjAYBgNVBAoTEUNPTU9ETyBD
** SIG ** QSBMaW1pdGVkMSowKAYDVQQDEyFDT01PRE8gU0hBLTEg
** SIG ** VGltZSBTdGFtcGluZyBTaWduZXKgggSdMIIEmTCCA4Gg
** SIG ** AwIBAgIPFojwOSVeY45pFDkH5jMLMA0GCSqGSIb3DQEB
** SIG ** BQUAMIGVMQswCQYDVQQGEwJVUzELMAkGA1UECBMCVVQx
** SIG ** FzAVBgNVBAcTDlNhbHQgTGFrZSBDaXR5MR4wHAYDVQQK
** SIG ** ExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxITAfBgNVBAsT
** SIG ** GGh0dHA6Ly93d3cudXNlcnRydXN0LmNvbTEdMBsGA1UE
** SIG ** AxMUVVROLVVTRVJGaXJzdC1PYmplY3QwHhcNMTUxMjMx
** SIG ** MDAwMDAwWhcNMTkwNzA5MTg0MDM2WjCBhDELMAkGA1UE
** SIG ** BhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3Rl
** SIG ** cjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09N
** SIG ** T0RPIENBIExpbWl0ZWQxKjAoBgNVBAMTIUNPTU9ETyBT
** SIG ** SEEtMSBUaW1lIFN0YW1waW5nIFNpZ25lcjCCASIwDQYJ
** SIG ** KoZIhvcNAQEBBQADggEPADCCAQoCggEBAOnpPd/XNwjJ
** SIG ** HjiyUlNCbSLxscQGBGue/YJ0UEN9xqC7H075AnEmse9D
** SIG ** 2IOMSPznD5d6muuc3qajDjscRBh1jnilF2n+SRik4rtc
** SIG ** Tv6OKlR6UPDV9syR55l51955lNeWM/4Og74iv2MWLKPd
** SIG ** KBuvPavql9LxvwQQ5z1IRf0faGXBf1mZacAiMQxibqdc
** SIG ** ZQEhsGPEIhgn7ub80gA9Ry6ouIZWXQTcExclbhzfRA8V
** SIG ** zbfbpVd2Qm8AaIKZ0uPB3vCLlFdM7AiQIiHOIiuYDELm
** SIG ** QpOUmJPv/QbZP7xbm1Q8ILHuatZHesWrgOkwmt7xpD9V
** SIG ** TQoJNIp1KdJprZcPUL/4ygkCAwEAAaOB9DCB8TAfBgNV
** SIG ** HSMEGDAWgBTa7WR0FJwUPKvdmam9WyhNizzJ2DAdBgNV
** SIG ** HQ4EFgQUjmstM2v0M6eTsxOapeAK9xI1aogwDgYDVR0P
** SIG ** AQH/BAQDAgbAMAwGA1UdEwEB/wQCMAAwFgYDVR0lAQH/
** SIG ** BAwwCgYIKwYBBQUHAwgwQgYDVR0fBDswOTA3oDWgM4Yx
** SIG ** aHR0cDovL2NybC51c2VydHJ1c3QuY29tL1VUTi1VU0VS
** SIG ** Rmlyc3QtT2JqZWN0LmNybDA1BggrBgEFBQcBAQQpMCcw
** SIG ** JQYIKwYBBQUHMAGGGWh0dHA6Ly9vY3NwLnVzZXJ0cnVz
** SIG ** dC5jb20wDQYJKoZIhvcNAQEFBQADggEBALozJEBAjHzb
** SIG ** WJ+zYJiy9cAx/usfblD2CuDk5oGtJoei3/2z2vRz8wD7
** SIG ** KRuJGxU+22tSkyvErDmB1zxnV5o5NuAoCJrjOU+biQl/
** SIG ** e8Vhf1mJMiUKaq4aPvCiJ6i2w7iH9xYESEE9XNjsn00g
** SIG ** MQTZZaHtzWkHUxY93TYCCojrQOUGMAu4Fkvc77xVCf/G
** SIG ** PhIudrPczkLv+XZX4bcKBUCYWJpdcRaTcYxlgepv84n3
** SIG ** +3OttOe/2Y5vqgtPJfO44dXddZhogfiqwNGAwsTEOYnB
** SIG ** 9smebNd0+dmX+E/CmgrNXo/4GengpZ/E8JIh5i15Jcki
** SIG ** +cPwOoRXrToW9GOUEB1d0MYxggJgMIICXAIBATCBqTCB
** SIG ** lTELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAlVUMRcwFQYD
** SIG ** VQQHEw5TYWx0IExha2UgQ2l0eTEeMBwGA1UEChMVVGhl
** SIG ** IFVTRVJUUlVTVCBOZXR3b3JrMSEwHwYDVQQLExhodHRw
** SIG ** Oi8vd3d3LnVzZXJ0cnVzdC5jb20xHTAbBgNVBAMTFFVU
** SIG ** Ti1VU0VSRmlyc3QtT2JqZWN0Ag8WiPA5JV5jjmkUOQfm
** SIG ** MwswCQYFKw4DAhoFAKCBjDAaBgkqhkiG9w0BCQMxDQYL
** SIG ** KoZIhvcNAQkQAQQwHAYJKoZIhvcNAQkFMQ8XDTE4MTEx
** SIG ** NTA5MTAzNVowIwYJKoZIhvcNAQkEMRYEFCBuQ22uCpob
** SIG ** bOoLzByHffplzzFXMCsGCyqGSIb3DQEJEAIMMRwwGjAY
** SIG ** MBYEFAOlsUZj6xICMJG4Sm1qaLyHHeZrMA0GCSqGSIb3
** SIG ** DQEBAQUABIIBAFstBKa77pwP+USnzpD2OLf6vMIlu/6V
** SIG ** 4pk/PfSMEd0nBDZWjQDvV5lZJAtk8D2zvSdPXjSbkwEo
** SIG ** 6QJWJEMx5eCE8ZBgDT9hpBRwRkzLjtG+ZE/3HHHPMPXB
** SIG ** 4baAAYQYJO4hFCstFLXkuW8YvDjNbEOPexoSRnTb9r5c
** SIG ** 6H4TFvvO2jCUljiUFbHrLQ43nxSaH0LDLoj8re0ixvUr
** SIG ** 22JGc6vwsN3OpVyjIU+y75G7yteTumvNuvtE1OMXascb
** SIG ** jd4qXocyAiH72jIz0kQYin4rTXv4wjdyLt2+hcRq5oIm
** SIG ** EK/vMLKthL1fY7mhZFZzLdlzF/ZZ4QfvoM+V6dtMLP5kvtM=
</signature>
</package>
