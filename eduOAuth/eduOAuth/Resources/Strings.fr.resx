<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorAccessTokenInvalidClient" xml:space="preserve">
    <value>L'authentification du client a échoué (ex: client inconnu, aucune authentification du client incluse ; ou méthode d'authentification non supportée).</value>
  </data>
  <data name="ErrorAccessTokenInvalidGrant" xml:space="preserve">
    <value>L'attribution d'autorisation fourni (ex : le code d'autorisation, les données du propriétaire de la ressource) ou le jeton de rafraichissement n'est pas valide, a expiré, est révoqué, ne correspond pas à l'URI utilisé dans la demande d'autorisation, ou a été émis vers un autre client.</value>
  </data>
  <data name="ErrorAccessTokenInvalidRequest" xml:space="preserve">
    <value>La requête ne contient pas un paramètre requis, inclut une valeur de paramètre non prise en charge (autre que le type d'attribution), répète un paramètre, inclut plusieurs informations d'identification, utilise plusieurs mécanismes pour authentifier le client, ou est mal formée.</value>
  </data>
  <data name="ErrorAccessTokenInvalidScope" xml:space="preserve">
    <value>Le scope demandée est invalide, inconnu, mal formé ou dépasse le scope accordé par le propriétaire de la ressource.</value>
  </data>
  <data name="ErrorAccessTokenUnauthorizedClient" xml:space="preserve">
    <value>Le client authentifié n'est pas autorisé à utiliser ce type d'attribution d'autorisation.</value>
  </data>
  <data name="ErrorAccessTokenUnsupportedGrantType" xml:space="preserve">
    <value>Le type d'attribution d'autorisation n'est pas supporté par le serveur d'autorisations.</value>
  </data>
  <data name="ErrorAuthorizationGrantAccessDenied" xml:space="preserve">
    <value>Le propriétaire de la ressource ou le serveur d'autorisation a refusé la requête.</value>
  </data>
  <data name="ErrorAuthorizationGrantInvalidRequest" xml:space="preserve">
    <value>La requête ne contient pas un paramètre requis, inclut une valeur de paramètre non valide, inclut un paramètre plusieurs fois, ou est mal formée.</value>
  </data>
  <data name="ErrorAuthorizationGrantInvalidScope" xml:space="preserve">
    <value>Le scope demandé est invalide, inconnu ou mal formé.</value>
  </data>
  <data name="ErrorAuthorizationGrantServerError" xml:space="preserve">
    <value>Le serveur d'autorisation a rencontré une condition inattendue qui l'a empêché de répondre à la demande.</value>
  </data>
  <data name="ErrorAuthorizationGrantTemporarilyUnavailable" xml:space="preserve">
    <value>Le serveur d'autorisation est actuellement incapable de traiter la demande en raison d'une surcharge ou d'une maintenance temporaire du serveur.</value>
  </data>
  <data name="ErrorAuthorizationGrantUnauthorizedClient" xml:space="preserve">
    <value>Le client n'est pas autorisé à requêter un code d'autorisation en utilisant cette méthode.</value>
  </data>
  <data name="ErrorAuthorizationGrantUnsupportedResponseType" xml:space="preserve">
    <value>Le serveur d'autorisation ne supporte pas l'obtention d'un code d'autorisation à l'aide de cette méthode.</value>
  </data>
  <data name="ErrorHttp400" xml:space="preserve">
    <value>Requête HTTP invalide: {0}</value>
    <comment>{0}=line containing error</comment>
  </data>
  <data name="ErrorHttp404" xml:space="preserve">
    <value>Chemin {0} non trouvé.</value>
  </data>
  <data name="ErrorHttp405" xml:space="preserve">
    <value>Méthode {0} non supportée.</value>
  </data>
  <data name="ErrorInvalidState" xml:space="preserve">
    <value>Les états de réponse et de requêtes sont différents.</value>
  </data>
  <data name="ErrorTokenType" xml:space="preserve">
    <value>{0}(type de jeton: {1})</value>
    <comment>{0}=A sentence explaining an error, {1}=token type</comment>
  </data>
  <data name="ErrorUnsupportedTokenType" xml:space="preserve">
    <value>Le type de jeton reçu n'est pas supporté.</value>
  </data>
  <data name="HtmlErrorDescription" xml:space="preserve">
    <value>Veuillez réessayer ultérieurement ou contactez votre service de support pour obtenir de l'aide.</value>
  </data>
  <data name="HtmlErrorDetails" xml:space="preserve">
    <value>Détails...</value>
  </data>
  <data name="HtmlErrorTitle" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="HtmlFinishedDescription" xml:space="preserve">
    <value>Vous pouvez maintenant fermer cet onglet.</value>
  </data>
  <data name="HtmlFinishedTitle" xml:space="preserve">
    <value>Le client a été autorisé avec succès.</value>
  </data>
</root>
