<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorAccessTokenInvalidClient" xml:space="preserve">
    <value>Client-Authentifizierung fehlgeschlagen (z. B. unbekannter Client, keine Client-Authentifizierung enthalten oder nicht unterstützte Authentifizierungsmethode).</value>
  </data>
  <data name="ErrorAccessTokenInvalidGrant" xml:space="preserve">
    <value>Die vorliegende Autorisierung (z. B. Autorisierungscode, Anmeldedaten des Ressourcenbesitzers) oder das Refresh-Token ist ungültig, abgelaufen, widerrufen, stimmt nicht mit dem in der Autorisierungsanfrage verwendeten Umleitungs-URI überein oder wurde auf einen anderen Client ausgestellt.</value>
  </data>
  <data name="ErrorAccessTokenInvalidRequest" xml:space="preserve">
    <value>Der Anfrage fehlt ein erforderlicher Parameter, sie enthält einen nicht unterstützten Parameterwert (außer dem Gewährungstyp), wiederholt einen Parameter, enthält mehrere Anmeldedaten, verwendet mehr als einen Mechanismus zur Authentifizierung des Clients oder ist anderweitig fehlerhaft gestaltet.</value>
  </data>
  <data name="ErrorAccessTokenInvalidScope" xml:space="preserve">
    <value>Der angeforderte Scope ist ungültig, unbekannt, fehlerhaft oder überschreitet den vom Ressourcenbesitzer gewährten Scope.</value>
  </data>
  <data name="ErrorAccessTokenUnauthorizedClient" xml:space="preserve">
    <value>Der authentifizierte Client ist nicht berechtigt, diese Art der Autorisierungserteilung zu verwenden.</value>
  </data>
  <data name="ErrorAccessTokenUnsupportedGrantType" xml:space="preserve">
    <value>Die Autorisierungserteilungsart wird vom Autorisierungsserver nicht unterstützt.</value>
  </data>
  <data name="ErrorAuthorizationGrantAccessDenied" xml:space="preserve">
    <value>Der Ressourcenbesitzer oder Autorisierungsserver lehnte die Anfrage ab.</value>
  </data>
  <data name="ErrorAuthorizationGrantInvalidRequest" xml:space="preserve">
    <value>Der Anfrage fehlt ein erforderlicher Parameter, sie enthält einen ungültigen Parameterwert, sie enthält einen Parameter mehr als einmal, oder sie ist anderweitig fehlerhaft.</value>
  </data>
  <data name="ErrorAuthorizationGrantInvalidScope" xml:space="preserve">
    <value>Der beantragte Scope ist ungültig, unbekannt oder fehlerhaft.</value>
  </data>
  <data name="ErrorAuthorizationGrantServerError" xml:space="preserve">
    <value>Der Autorisierungsserver ist auf ein unerwartetes Problem gestoßen, das ihn daran hinderte, die Anforderung zu erfüllen.</value>
  </data>
  <data name="ErrorAuthorizationGrantTemporarilyUnavailable" xml:space="preserve">
    <value>Der Autorisierungsserver ist derzeit nicht in der Lage, die Anfrage aufgrund einer vorübergehenden Überlastung oder Wartung des Servers zu bearbeiten.</value>
  </data>
  <data name="ErrorAuthorizationGrantUnauthorizedClient" xml:space="preserve">
    <value>Der Client ist nicht berechtigt, mit dieser Methode einen Autorisierungscode anzufordern.</value>
  </data>
  <data name="ErrorAuthorizationGrantUnsupportedResponseType" xml:space="preserve">
    <value>Der Autorisierungsserver unterstützt das Abrufen eines Autorisierungscodes mit dieser Methode nicht.</value>
  </data>
  <data name="ErrorHttp400" xml:space="preserve">
    <value>Ungültige HTTP-Anfrage: {0}</value>
    <comment>{0}=line containing error</comment>
  </data>
  <data name="ErrorHttp404" xml:space="preserve">
    <value>Pfad {0} nicht gefunden.</value>
  </data>
  <data name="ErrorHttp405" xml:space="preserve">
    <value>Methode {0} wird nicht unterstützt.</value>
  </data>
  <data name="ErrorInvalidState" xml:space="preserve">
    <value>Antwort- und Anfragezustand weichen voneinander ab.</value>
  </data>
  <data name="ErrorTokenType" xml:space="preserve">
    <value>{0} (Token-Typ: {1})</value>
    <comment>{0}=A sentence explaining an error, {1}=token type</comment>
  </data>
  <data name="ErrorUnsupportedTokenType" xml:space="preserve">
    <value>Der empfangene Token-Typ wird nicht unterstützt.</value>
  </data>
  <data name="HtmlErrorDescription" xml:space="preserve">
    <value>Bitte versuchen Sie es später noch einmal oder wenden Sie sich an Ihren Helpdesk.</value>
  </data>
  <data name="HtmlErrorDetails" xml:space="preserve">
    <value>Details...</value>
  </data>
  <data name="HtmlErrorTitle" xml:space="preserve">
    <value>Fehler</value>
  </data>
  <data name="HtmlFinishedDescription" xml:space="preserve">
    <value>Sie können diesen Tab jetzt schließen.</value>
  </data>
  <data name="HtmlFinishedTitle" xml:space="preserve">
    <value>Der Client wurde erfolgreich autorisiert.</value>
  </data>
</root>
