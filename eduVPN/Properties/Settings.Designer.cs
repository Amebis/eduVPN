//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eduVPN.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.9.0.0")]
    public sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        /// <summary>
        /// The last product version user was prompted to update to
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The last product version user was prompted to update to")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SelfUpdateLastVersion {
            get {
                return ((string)(this["SelfUpdateLastVersion"]));
            }
            set {
                this["SelfUpdateLastVersion"] = value;
            }
        }
        
        /// <summary>
        /// The last time user was prompted to update at
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("The last time user was prompted to update at")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTimeOffset SelfUpdateLastReminder {
            get {
                return ((global::System.DateTimeOffset)(this["SelfUpdateLastReminder"]));
            }
            set {
                this["SelfUpdateLastReminder"] = value;
            }
        }
        
        /// <summary>
        /// Which OpenVPN interactive service instance client should use to manipulate openvpn.exe process:
        /// - &quot;$eduVPN&quot; - Use OpenVPN installation bundled with the client.
        /// - &quot;&quot; - Use original OpenVPN installation.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Which OpenVPN interactive service instance client should use to manipulate openvp" +
            "n.exe process:\r\n - \"$eduVPN\" - Use OpenVPN installation bundled with the client." +
            "\r\n - \"\" - Use original OpenVPN installation.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string OpenVPNInteractiveServiceInstance {
            get {
                return ((string)(this["OpenVPNInteractiveServiceInstance"]));
            }
        }
        
        /// <summary>
        /// Prefer connecting using TCP
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Prefer connecting using TCP")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool PreferTCP {
            get {
                return ((bool)(this["PreferTCP"]));
            }
            set {
                this["PreferTCP"] = value;
            }
        }
        
        /// <summary>
        /// A flag to trigger setting upgrade from the previous version
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("A flag to trigger setting upgrade from the previous version")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int SettingsVersion {
            get {
                return ((int)(this["SettingsVersion"]));
            }
            set {
                this["SettingsVersion"] = value;
            }
        }
        
        /// <summary>
        /// Options to be removed from OpenVPN profile configuration (when provisioned). List OpenVPN option names only - i.e. without parameters. Use in combination with OpenVPNAddOptions setting to override the OpenVPN options provisioned by the VPN provider.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Options to be removed from OpenVPN profile configuration (when provisioned). List" +
            " OpenVPN option names only - i.e. without parameters. Use in combination with Op" +
            "enVPNAddOptions setting to override the OpenVPN options provisioned by the VPN p" +
            "rovider.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Specialized.StringCollection OpenVPNRemoveOptions {
            get {
                return ((global::System.Collections.Specialized.StringCollection)(this["OpenVPNRemoveOptions"]));
            }
        }
        
        /// <summary>
        /// Custom options to be added to OpenVPN profile configuration. This string is appended to the OpenVPN profile configuration file (OVPN) and should conform to the OVPN file syntax. It can contain multiple lines to specify multiple OpenVPN options. Use in combination with OpenVPNRemoveOptions setting to override the OpenVPN options provisioned by the VPN provider.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute(@"Custom options to be added to OpenVPN profile configuration. This string is appended to the OpenVPN profile configuration file (OVPN) and should conform to the OVPN file syntax. It can contain multiple lines to specify multiple OpenVPN options. Use in combination with OpenVPNRemoveOptions setting to override the OpenVPN options provisioned by the VPN provider.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string OpenVPNAddOptions {
            get {
                return ((string)(this["OpenVPNAddOptions"]));
            }
        }
        
        /// <summary>
        /// Self-updating feature base URI
        /// Set to empty to disable self-updating.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Self-updating feature base URI\r\n Set to empty to disable self-updating.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::eduVPN.Xml.ResourceRef SelfUpdateDiscovery {
            get {
                return ((global::eduVPN.Xml.ResourceRef)(this["SelfUpdateDiscovery"]));
            }
        }
        
        /// <summary>
        /// Which server user selected last
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Which server user selected last")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string LastSelectedServer {
            get {
                return ((string)(this["LastSelectedServer"]));
            }
            set {
                this["LastSelectedServer"] = value;
            }
        }
        
        /// <summary>
        /// Which WireGuard tunnel manager service instance client should use:
        /// - &quot;$eduVPN&quot; - Use WireGuard installation bundled with the eduVPN client.
        /// - &quot;$LetsConnect&quot; - Use WireGuard installation bundled with the Let&apos;s Connect! client.
        /// - &quot;$govVPN&quot; - Use WireGuard installation bundled with the govVPN client.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute(@"Which WireGuard tunnel manager service instance client should use:
 - ""$eduVPN"" - Use WireGuard installation bundled with the eduVPN client.
 - ""$LetsConnect"" - Use WireGuard installation bundled with the Let's Connect! client.
 - ""$govVPN"" - Use WireGuard installation bundled with the govVPN client.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string WireGuardTunnelManagerServiceInstance {
            get {
                return ((string)(this["WireGuardTunnelManagerServiceInstance"]));
            }
        }
        
        /// <summary>
        /// GUID of the installer EXE bundle
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("GUID of the installer EXE bundle")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string SelfUpdateBundleId {
            get {
                return ((string)(this["SelfUpdateBundleId"]));
            }
        }
        
        /// <summary>
        /// Client identifier
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Client identifier")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string ClientId {
            get {
                return ((string)(this["ClientId"]));
            }
        }
        
        /// <summary>
        /// Client Title
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Client Title")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string ClientTitle {
            get {
                return ((string)(this["ClientTitle"]));
            }
        }
        
        /// <summary>
        /// Client simple name (without spaces and limited punctuation)
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Client simple name (without spaces and limited punctuation)")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string ClientSimpleName {
            get {
                return ((string)(this["ClientSimpleName"]));
            }
        }
        
        /// <summary>
        /// Client URI
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Client URI")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Uri ClientAboutUri {
            get {
                return ((global::System.Uri)(this["ClientAboutUri"]));
            }
        }
        
        /// <summary>
        /// Supports server and organization discovery.
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Supports server and organization discovery.")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool Discovery {
            get {
                return ((bool)(this["Discovery"]));
            }
        }
        
        /// <summary>
        /// Access token cache
        /// </summary>
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("Access token cache")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<SerializableStringDictionary />")]
        public global::eduVPN.Xml.SerializableStringDictionary AccessTokenCache2 {
            get {
                return ((global::eduVPN.Xml.SerializableStringDictionary)(this["AccessTokenCache2"]));
            }
            set {
                this["AccessTokenCache2"] = value;
            }
        }
        
        /// <summary>
        /// WireGuard kill-switch override
        /// </summary>
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Configuration.SettingsDescriptionAttribute("WireGuard kill-switch override")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Preserve")]
        public global::eduVPN.ViewModels.VPN.WireGuardKillSwitchMode WireGuardKillSwitch {
            get {
                return ((global::eduVPN.ViewModels.VPN.WireGuardKillSwitchMode)(this["WireGuardKillSwitch"]));
            }
        }
    }
}
